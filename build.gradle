import io.gitlab.arturbosch.detekt.Detekt
import io.gitlab.arturbosch.detekt.DetektPlugin
import io.gitlab.arturbosch.detekt.report.ReportMergeTask

buildscript {
    repositories {
        google()
    }
    dependencies {
        classpath "com.google.gms:google-services:4.3.14"
        classpath "com.google.firebase:firebase-crashlytics-gradle:2.9.2"
    }
}
plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.7.20' apply false
    id 'org.jetbrains.kotlin.android' version '1.7.20' apply false
    id 'org.jetbrains.kotlin.plugin.parcelize' version '1.7.20' apply false
    id 'org.jetbrains.kotlin.plugin.serialization' version '1.7.20' apply false
    id "com.android.library" version "8.0.0-alpha06" apply false
    id "com.android.application" version "8.0.0-alpha06" apply false
    id "com.google.dagger.hilt.android" version "2.44" apply false
    id "nl.neotech.plugin.rootcoverage" version "1.6.0"
    id "io.gitlab.arturbosch.detekt" version "1.21.0"
}

rootCoverage {
    excludes = ["wiki/depasquale/**"]

    generateCsv false
    generateHtml false
    generateXml true
}

task reportMerge(type: ReportMergeTask) {
    output = project.layout.buildDirectory.file("reports/detekt/merge.sarif")
}

subprojects {
    if (plugins.findPlugin("io.gitlab.arturbosch.detekt") == null)
        return

    detekt {
        reports.sarif.required.set(true)
    }

    plugins.withType(DetektPlugin) {
        tasks.withType(Detekt) { detektTask ->
            finalizedBy(reportMerge)

            reportMerge.configure { mergeTask ->
                mergeTask.input.from(detektTask.sarifReportFile)
            }
        }
    }
}